name: 'publish'

# This will trigger the action on each push to the `release` branch.
on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
          include:
              - target: aarch64-apple-darwin
                platform: macos-latest
              - target: x86_64-apple-darwin
                platform: macos-latest
              - target: x86_64-unknown-linux-gnu
                platform: ubuntu-latest

              - target: aarch64-unknown-linux-gnu
                platform: ubuntu-latest
                image: rayproject/ray:7f6d5c-py311-aarch64
              - target: x86_64-pc-windows-msvc
                platform: windows-latest

                # ghcr.io/cross-rs/aarch64-unknown-linux-gnu:main
    runs-on: ${{ matrix.platform }}
    container:
      image: ${{ matrix.image }}
    steps:


      - uses: actions/checkout@v4
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install dependencies 
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl  wget  libssl-dev libgtk-3-dev libayatana-appindicator3-dev libwebkit2gtk-4.0-dev librsvg2-dev patchelf libsoup2.4-dev
          rustup target add aarch64-unknown-linux-gnu


      - name: install dependencies (mac only)
        if: matrix.platform == 'macos-latest'
        run: |
            rustup target add aarch64-apple-darwin

      - name: Install pnpm
        run: npm install -g pnpm
        
      - name: install frontend dependencies
        run: pnpm install # change this to npm or pnpm depending on which one you use

      - name: Build Tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        with:
          tagName: v__VERSION__
          releaseName: v__VERSION__
          args: --target ${{matrix.target}}
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false